---
interface Card {
  avatar: string;
  name: string;
  date: string;
  text: string;
  rating: number;
}

const {
  cards = [],
  duration = 25,
  reverse = false,
  topPadding = "",
  bottomPadding = "",
} = Astro.props;

const doubled = [...cards, ...cards];
---

<style>
  @keyframes marqueeScroll {
    0% {
      transform: translateX(0%);
    }
    100% {
      transform: translateX(-50%);
    }
  }
  .marquee-inner {
    animation: marqueeScroll var(--marquee-duration, 25s) linear infinite;
    will-change: transform;
  }
  .marquee-reverse {
    animation-direction: reverse;
  }
</style>

<div
  class="marquee-row w-full mx-auto max-w-screen md:max-w-3xl lg:max-w-6xl overflow-hidden relative"
>
  <div
    class="absolute left-0 top-0 h-full w-12 lg:w-20 z-10 pointer-events-none bg-gradient-to-r from-white to-transparent"
  >
  </div>

  <div
    class={`marquee-inner flex transform-gpu lg:min-w-[200%] ${topPadding} ${bottomPadding} ${reverse ? "marquee-reverse" : ""}`}
    style={{ "--marquee-duration": `${duration}s` }}
  >
    {
      doubled.map((card: Card, i: number) => (
        <div
          class="p-4 rounded-lg mx-4 shadow hover:shadow-lg transition-all duration-200 w-60 lg:w-72 shrink-0 bg-white"
          aria-label={`card-${i}`}
        >
          <div class="flex gap-2">
            <img
              class="size-11 rounded-full object-cover"
              src={card.avatar}
              alt={`Foto de ${card.name}`}
              loading="lazy"
            />
            <div class="flex flex-col">
              <div class="flex items-center gap-1">
                <p class="font-medium">{card.name}</p>
              </div>
              <div
                class="flex items-center gap-0.5"
                aria-label={`Rating: ${card.rating} de 5`}
              >
                {Array.from({ length: 5 }).map((_, idx) => (
                  <svg
                    class="w-4 h-4 text-yellow-400"
                    viewBox="0 0 20 20"
                    aria-hidden="true"
                  >
                    <path
                      d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.97 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.54-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"
                      fill={idx < card.rating ? "currentColor" : "none"}
                      stroke={idx < card.rating ? "none" : "currentColor"}
                    />
                  </svg>
                ))}
              </div>
            </div>
          </div>
          <p class="text-sm py-4 text-gray-800">{card.text}</p>
          <div class="flex items-center justify-between text-slate-500 text-xs">
            <div class="flex items-center gap-1">
              <span>{card.date}</span>
            </div>
          </div>
        </div>
      ))
    }
  </div>
  <div
    class="absolute right-0 top-0 h-full w-20 md:w-40 z-10 pointer-events-none bg-gradient-to-l from-white to-transparent"
  >
  </div>
</div>
